{"version":3,"sources":["dino.json","app.js"],"names":["module","exports","Dinos","species","weight","height","diet","where","when","fact","Dinosaur","renderable","name","image","images","toLowerCase","Human","feet","inches","getHumanDataFromForm","form","document","getElementById","data","FormData","Object","fromEntries","createTile","fragment","obj","compareTo","instance","content","cloneNode","querySelector","textContent","src","compareRandom","remove","createTiles","human","tiles","dinos","map","dino","splice","append","removeFormFromScreen","prototype","compareWeight","diff","Math","abs","compareHeight","compareDiet","facts","floor","random","length","addEventListener"],"mappings":"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","file":"app.9ccbcf1d.js","sourceRoot":"..","sourcesContent":["module.exports={Dinos:[{species:\"Triceratops\",weight:13e3,height:114,diet:\"herbavor\",where:\"North America\",when:\"Late Cretaceous\",fact:\"First discovered in 1889 by Othniel Charles Marsh\"},{species:\"Tyrannosaurus Rex\",weight:11905,height:144,diet:\"carnivor\",where:\"North America\",when:\"Late Cretaceous\",fact:\"The largest known skull measures in at 5 feet long.\"},{species:\"Anklyosaurus\",weight:10500,height:55,diet:\"herbavor\",where:\"North America\",when:\"Late Cretaceous\",fact:\"Anklyosaurus survived for approximately 135 million years.\"},{species:\"Brachiosaurus\",weight:7e4,height:\"372\",diet:\"herbavor\",where:\"North America\",when:\"Late Jurasic\",fact:\"An asteroid was named 9954 Brachiosaurus in 1991.\"},{species:\"Stegosaurus\",weight:11600,height:79,diet:\"herbavor\",where:\"North America, Europe, Asia\",when:\"Late Jurasic to Early Cretaceous\",fact:\"The Stegosaurus had between 17 and 22 seperate places and flat spines.\"},{species:\"Elasmosaurus\",weight:16e3,height:59,diet:\"carnivor\",where:\"North America\",when:\"Late Cretaceous\",fact:\"Elasmosaurus was a marine reptile first discovered in Kansas.\"},{species:\"Pteranodon\",weight:44,height:20,diet:\"carnivor\",where:\"North America\",when:\"Late Cretaceous\",fact:\"Actually a flying reptile, the Pteranodon is not a dinosaur.\"},{species:\"Pigeon\",weight:.5,height:9,diet:\"herbavor\",where:\"World Wide\",when:\"Holocene\",fact:\"All birds are living dinosaurs.\"}]};","import dinos from \"./dino.json\";\nimport images from \"./images/*.png\";\n\n/**\n * @description Respresents a dinosaur\n * @constructor\n * @param {string} species - The species of the dinosaur\n * @param {number} weight - The weight of the dinosaur\n * @param {number} height - The height of the dinosaur\n * @param {string} diet - The diet of the dinosaur\n * @param {string} where - Where the dinosaur was located\n * @param {string} when - The epoch the dinosaur was active\n * @param {string} fact - A given fact about the dinosaur\n */\nfunction Dinosaur({ species, weight, height, diet, where, when, fact }) {\n  this.species = species;\n  this.weight = weight;\n  this.height = height;\n  this.diet = diet;\n  this.where = where;\n  this.when = when;\n  this.fact = fact;\n  this.renderable = {\n    name: this.species,\n    image: images[this.species.toLowerCase()],\n  }\n}\n\n/**\n * @description Respresents a human\n * @constructor\n * @param {string} name - The name of the human\n * @param {number} feet - The height of the human (feets only)\n * @param {number} inches - The height of the human (inches only)\n * @param {number} weight - The weight of the human\n * @param {diet} where - The diet of the human\n */\nfunction Human({ name, feet, inches, weight, diet }) {\n  this.name = name;\n  this.height = feet * 12 + inches;\n  this.weight = weight;\n  this.diet = diet;\n  this.image = images[\"human\"];\n  this.renderable = {\n    name: this.name,\n    image: images['human'],\n  }\n}\n\n/**\n * @description Fetch data given in the html-form to create a human object\n * @returns {Human} Instance of Human with given values from the form element \n */\nconst getHumanDataFromForm = (function () {\n  const form = document.getElementById(\"dino-compare\");\n\n  return function () {\n    const data = new FormData(form);\n    return new Human(Object.fromEntries(data));\n  };\n})();\n\n/**\n * @description Compares the weight of the given dinosaur with the human's\n * @param {Human} - human\n * @returns {string} A fact according the difference of weight\n */\nDinosaur.prototype.compareWeight = function (human) {\n  const weight = human.weight;\n  const diff = Math.abs(this.weight - weight);\n\n  if (this.weight < weight) {\n    return `I weight ${diff} lbs less than you.`;\n  }\n\n  if (this.weight > weight) {\n    return `I weigh ${diff} lbs more than you.`;\n  }\n\n  return \"We are the same weight.\";\n};\n\n/**\n * @description Compares the height of the given dinosaur with the human's\n * @param {Human} - human\n * @returns {string} A fact according the difference of height\n */\nDinosaur.prototype.compareHeight = function (human) {\n  const height = human.height;\n  const diff = Math.abs(this.height - height);\n\n  if (this.height < height) {\n    return `I am ${diff} inches shorter than you.`;\n  }\n\n  if (this.height > height) {\n    return `I am ${diff} inches taller than you.`;\n  }\n\n  return \"We are the same size.\";\n};\n\n/**\n * @description Compares the diet of the given dinosaur with the human's\n * @param {Human} - human\n * @returns {string} A fact according the difference of the diet\n */\nDinosaur.prototype.compareDiet = function (human) {\n  const diet = human.diet.toLowerCase();\n\n  if (this.diet !== diet) {\n    return `You are a ${diet} but I'm a ${this.diet}`;\n  }\n  \n  return `We are both ${diet}'s`;\n};\n\n/**\n * @description Returns a random fact generated by prepared functions\n * @returns {string} A random fact\n */\nDinosaur.prototype.compareRandom = function (human) {\n  const facts = [\"compareDiet\", \"compareHeight\", \"compareWeight\"];\n  const randomNumber = Math.floor(Math.random() * Math.floor(facts.length));\n\n  return this[facts[randomNumber]](human);\n};\n\n/**\n * @description Creates a single tile with name, image and fact if possible\n * @returns An copy of the DOM fragment, filled with values from the obj\n */\nfunction createTile(fragment, obj, compareTo) {\n  const instance = fragment.content.cloneNode(true);\n\n  const name = instance.querySelector(\"#name\");\n  name.textContent = obj.renderable.name;\n\n  const image = instance.querySelector(\"#image\");\n  image.src = obj.renderable.image;\n\n  const fact = instance.querySelector(\"#fact\");\n\n  if (!compareTo) {\n    fact.remove();\n  } else if (obj.renderable.name === 'Pigeon') {\n    fact.textContent = 'All birds are dinosaurs.';\n  } else {\n    fact.textContent = obj.compareRandom(compareTo);\n  }\n\n  return instance;\n}\n\n/**\n * @description Create tiles for dinosaur's and human and append to document\n */\nfunction createTiles(human) {\n  const fragment = document.getElementById(\"dino-grid-template\");\n  const tiles = dinos.Dinos.map((dino) =>\n    createTile(fragment, new Dinosaur(dino), human)\n  );\n\n  // add human in the middle of the dino tiles\n  tiles.splice(4, 0, createTile(fragment, human));\n\n  document.getElementById(\"grid\").append(...tiles);\n}\n\n/**\n * @description Removes the form in the document\n */\nfunction removeFormFromScreen() {\n  document.getElementById(\"dino-compare\").remove();\n}\n\ndocument.getElementById(\"dino-compare\").addEventListener(\"submit\", function () {\n  // hide form\n  removeFormFromScreen();\n\n  // get human data\n  const human = getHumanDataFromForm();\n\n  // add tiles\n  createTiles(human);\n});\n"]}